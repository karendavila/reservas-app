version: '3'

services:
  node-app:
    image: node
    container_name: node-app
    working_dir: /app
    volumes:
      - ./backend/:/app
    ports:
      - '${PORT}:${PORT}' # Usando variable desde .env
    environment:
      - JWT_SECRET=${JWT_SECRET}
      - REFRESH_TOKEN_SECRET=${REFRESH_TOKEN_SECRET}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_DIALECT=${DB_DIALECT}
    depends_on:
      - db
    command: bash -c "npm install && npm run dev"

  frontend:
    image: node
    container_name: frontend-app
    working_dir: /app
    volumes:
      - ./frontend:/app
    environment:
      - FRONTEND_PORT=${FRONTEND_PORT}
    ports:
      - '${FRONTEND_PORT}:${FRONTEND_PORT}'
    command: bash -c "npm install && npm start"

  db:
    image: postgres
    container_name: postgres-db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - '${DB_PORT}:3000'
    volumes:
      - postgres-data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL} # Email para acceder a pgAdmin
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD} # Contrase√±a para acceder a pgAdmin
    ports:
      - '5050:80'
    depends_on:
      - db
    volumes:
      - pgadmin-data:/var/lib/pgadmin

volumes:
  postgres-data:
  pgadmin-data:
